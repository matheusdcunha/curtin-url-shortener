services:
  backend:
    build: .
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - MONGO_HOST=mongodb
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - app-network
    restart: on-failure
  mongodb:
    image: mongo:latest
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - "curtin_db:/data/db"
    networks:
      - app-network
    healthcheck:
      test: |
        mongosh --host localhost --port 27017 --eval "db.adminCommand('ping')" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  redis:
    image: redis:7.4.5-alpine3.21
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
volumes:
  curtin_db:

networks:
  app-network:
    driver: bridge
